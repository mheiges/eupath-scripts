#!/bin/bash

#
# Rebuild an integration website for the ApiDB project.
#
# Wraps the 'rebuilder' script
#
# $Id: ibuilder 2080 2010-09-27 16:24:24Z bdp $
# $URL: https://mango.ctegd.uga.edu/svn/ApiCommonSystem/trunk/WDK/bin/ibuilder $
#
this=`basename $0`

IFS=$' \t\n'
\unalias -a
unset -f command
unset -f unalias

for jpath in \
    '/usr/lib/jvm/java-1.5.0-sun-1.5.0.15' \
    '/usr/java/1.5'  \
    '/usr/java/jdk1.5.0_10' \
    '/files/cbil/software/java/current'; do
    if [[ -d $jpath ]]; then
        export JAVA_HOME="$jpath"
        break
    fi
done

unset $(/usr/bin/env | egrep '^(\w+)=(.*)$' | \
  egrep -vw 'PWD|USER|LANG|SUDO_USER|JAVA_HOME|HOME' | /usr/bin/cut -d= -f1);

export PATH=/usr/local/ant/bin:/files/cbil/software/ant/current/bin:$JAVA_HOME/bin:/usr/local/bin:/usr/bin:/bin


RUN_AS=joeuser

######################################################################
#####              restart_as_sudo()                           #######
######################################################################

restart_as_sudo () {
  
  if [ "$USER" != "$RUN_AS" ]; then
    prompt=$(cat <<EOF
sudo permissions are required to continue.
Enter your password:
EOF
)
    exec sudo -u $RUN_AS -H -P -p "$prompt" $1

    exit ${?}  # sice we're 'execing' above, we won't reach this exit
               # unless something goes wrong.

  else
    export LD_LIBRARY_PATH=$ORACLE_HOME/lib
  fi

}


######################################################################
#####                                                          #######
#####              MAIN                                        #######
#####                                                          #######
######################################################################

if [[ ! $1 || "$1" == "shell" ]]; then
    echo
    if [ "$1" == "shell" ]; then
    echo
    echo
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
    echo "FATAL: Missing <PRODUCT>"
    else
    echo "Rebuild an existing integration website."
    fi
    echo
    echo "usage: $this <PRODUCT>"
    echo "       $this <PRODUCT> shell"
    echo
    echo "where <PRODUCT> is one of ToxoDB, GiardiaDB, or other."
    echo
    echo "The shell option dumps you into the shell account of"
    echo "the integration site owner. Use this if you need to perform"
    echo "tasks that exceed the capacity of the script, such as repairing"
    echo "a failed build."
    echo
    echo "Alternatively, you may rebuild other sites via:"
    echo  "      $this <HOSTNAME>"
    echo  "      $this <HOSTNAME> shell"
    echo
    echo "where <HOSTNAME> is the site's host name"
    echo "For example,"
    echo "       $this qa.cryptodb.org"
    echo
    echo "The site files must be owned by $RUN_AS."
    echo
    exit 1
fi

WEB_BASE_DIR='/var/www'

if [[ "$1" =~ '--.*' ]]; then
    echo "Arguments to rebuilder like '$1' must come after the target site or product"
    exit 1
elif [[ "$1" =~ '.+\.org\b' || "$1" =~ '.+\.edu\b' || "$1" =~ '.+\.com\b' ]]; then
    export TARGET_SITE=$1
    export SITE_SYMLINK="$WEB_BASE_DIR/$TARGET_SITE"
    export HOME=$SITE_SYMLINK
    CONTAINER="$(dirname $(readlink -n $SITE_SYMLINK) 2>/dev/null)"
    export PRODUCT=${CONTAINER##*/}
else
    export PRODUCT=$1
    export TARGET_SITE="integrate.$(echo $PRODUCT | tr '[:upper:]' '[:lower:]').org"
    export SITE_SYMLINK="$WEB_BASE_DIR/$TARGET_SITE"
fi

export SHELL=$2

if [ ! -e $SITE_SYMLINK ]; then
    echo "FATAL: $SITE_SYMLINK not found. I'll be dying now."
    exit 1
fi

restart_as_sudo "$0 $*"

if [ "$2" == "shell" ]; then

    cd $SITE_SYMLINK
    export PS1="\nIntegration Shell - Enter 'exit' to resume your own shell.\n[\$(date +'%H:%M %Y%m%d') \`pwd -P\`]\n>> "
    export HOME=$SITE_SYMLINK
    export HISTFILE=''
    export TERM='xterm'
    source /etc/profile
    source $SITE_SYMLINK/etc/setenv
    unset DISPLAY

    cat <<EOF > $SITE_SYMLINK/.bashrc
# autogenerated by $this script. manual edits will be lost
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi
alias dir='ls -Fl'
alias cp="cp -i"
alias rm="rm -i"
alias mv="mv -i"
function svn {
    local verb=\$1
    shift

    case \$verb in
        blame       | \
        cat         | \
        checkout    | \
        commit      | \
        copy        | \
        delete      | \
        diff        | \
        export      | \
        import      | \
        info        | \
        list        | \
        lock        | \
        log         | \
        merge       | \
        mkdir       | \
        move        | \
        propdel     | \
        propedit    | \
        propget     | \
        proplist    | \
        propset     | \
        status      | \
        switch      | \
        unlock      | \
        update)
            command svn \$verb --no-auth-cache --username \$SUDO_USER "\$@"
            ;;
        *)
            command svn \$verb "\$@"
            ;;
    esac
}
EOF


    echo 
    echo "///////////////////////////////////////////////////////"
    echo "     Entering shell for integration user."
    echo
    echo  HOME=$(readlink -f $HOME)
    echo  PROJECT_HOME=$PROJECT_HOME
    echo  GUS_HOME=$GUS_HOME
    echo
    echo "     Enter 'exit' to resume your own shell."
    echo "///////////////////////////////////////////////////////"
    echo

    exec /bin/bash --rcfile $SITE_SYMLINK/.bashrc
fi

rebuilder $TARGET_SITE --do_aggressive_clean $@
rc=$?
echo "<rebuilder> exit $rc"

#if [[ $rc -eq 0  ]]; then
#    echo -e "\n\n\n//////// <$this> reload apache  //////////\n\n\n";
#    sudo /etc/init.d/httpd reload
#    rc=$?
#fi

sudo -k

exit $rc
